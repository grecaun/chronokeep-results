# This is a continuous delivery pipeline for github meant to compile Chronokeep Results and push it to github releases.
name: Deploy Remote API
on:
  push:
    tags:
      - '*'
  workflow_dispatch:
  
jobs:
  build:
    name: Build Remote
    runs-on: ubuntu-latest
    steps:
      - name: Check out source code
        uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.21.6'
          check-latest: true
      # Generate version information
      - name: Generate version text file
        run: git describe --tag > version.txt
      # Set an environment variable to the tag we want to use to describe this release.
      - name: Get tag environment variable.
        run: echo "RELEASE_VERSION=$(git describe --tag)" >> $GITHUB_OUTPUT
        id: release-version

      - name: Build
        run: go build .
      
      - name: Tar and Zip the version and executable files
        id: create_archive
        uses: thedoctor0/zip-release@0.7.5
        with:
          type: 'tar'
          filename: release/release.tar.gz
          exclusions: '*.git* *.go *.md *.mod *.sum LICENSE auth database handlers types util vendor *.tar.gz release'
          command: "mkdir -p release"

      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag: ${{ steps.release-version.outputs.RELEASE_VERSION }}

      - name: Update release asset
        id: upload-release-asset
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/release.tar.gz